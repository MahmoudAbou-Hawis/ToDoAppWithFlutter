// Mocks generated by Mockito 5.4.5 from annotations
// in to_do/test/google_calender_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i10;
import 'dart:typed_data' as _i11;

import 'package:google_sign_in/google_sign_in.dart' as _i2;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i6;
import 'package:googleapis/calendar/v3.dart' as _i3;
import 'package:googleapis_auth/src/access_credentials.dart' as _i4;
import 'package:googleapis_auth/src/auth_client.dart' as _i9;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoogleSignInAuthentication_0 extends _i1.SmartFake
    implements _i2.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAclResource_1 extends _i1.SmartFake implements _i3.AclResource {
  _FakeAclResource_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCalendarListResource_2 extends _i1.SmartFake
    implements _i3.CalendarListResource {
  _FakeCalendarListResource_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCalendarsResource_3 extends _i1.SmartFake
    implements _i3.CalendarsResource {
  _FakeCalendarsResource_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChannelsResource_4 extends _i1.SmartFake
    implements _i3.ChannelsResource {
  _FakeChannelsResource_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeColorsResource_5 extends _i1.SmartFake
    implements _i3.ColorsResource {
  _FakeColorsResource_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEventsResource_6 extends _i1.SmartFake
    implements _i3.EventsResource {
  _FakeEventsResource_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFreebusyResource_7 extends _i1.SmartFake
    implements _i3.FreebusyResource {
  _FakeFreebusyResource_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSettingsResource_8 extends _i1.SmartFake
    implements _i3.SettingsResource {
  _FakeSettingsResource_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEvent_9 extends _i1.SmartFake implements _i3.Event {
  _FakeEvent_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEvents_10 extends _i1.SmartFake implements _i3.Events {
  _FakeEvents_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChannel_11 extends _i1.SmartFake implements _i3.Channel {
  _FakeChannel_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccessCredentials_12 extends _i1.SmartFake
    implements _i4.AccessCredentials {
  _FakeAccessCredentials_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_13 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_14 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i2.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SignInOption get signInOption =>
      (super.noSuchMethod(
            Invocation.getter(#signInOption),
            returnValue: _i6.SignInOption.standard,
          )
          as _i6.SignInOption);

  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);

  @override
  bool get forceCodeForRefreshToken =>
      (super.noSuchMethod(
            Invocation.getter(#forceCodeForRefreshToken),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<_i2.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onCurrentUserChanged),
            returnValue: _i7.Stream<_i2.GoogleSignInAccount?>.empty(),
          )
          as _i7.Stream<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInSilently, [], {
              #suppressErrors: suppressErrors,
              #reAuthenticate: reAuthenticate,
            }),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> isSignedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isSignedIn, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(
            Invocation.method(#signIn, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<_i2.GoogleSignInAccount?> disconnect() =>
      (super.noSuchMethod(
            Invocation.method(#disconnect, []),
            returnValue: _i7.Future<_i2.GoogleSignInAccount?>.value(),
          )
          as _i7.Future<_i2.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> requestScopes(List<String>? scopes) =>
      (super.noSuchMethod(
            Invocation.method(#requestScopes, [scopes]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #canAccessScopes,
              [scopes],
              {#accessToken: accessToken},
            ),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i2.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email => 
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i7.Future<_i2.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
            Invocation.getter(#authentication),
            returnValue: _i7.Future<_i2.GoogleSignInAuthentication>.value(
              _FakeGoogleSignInAuthentication_0(
                this,
                Invocation.getter(#authentication),
              ),
            ),
          )
          as _i7.Future<_i2.GoogleSignInAuthentication>);

  @override
  _i7.Future<Map<String, String>> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: _i7.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i7.Future<Map<String, String>>);

  @override
  _i7.Future<void> clearAuthCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthCache, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i2.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [CalendarApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarApi extends _i1.Mock implements _i3.CalendarApi {
  MockCalendarApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AclResource get acl =>
      (super.noSuchMethod(
            Invocation.getter(#acl),
            returnValue: _FakeAclResource_1(this, Invocation.getter(#acl)),
          )
          as _i3.AclResource);

  @override
  _i3.CalendarListResource get calendarList =>
      (super.noSuchMethod(
            Invocation.getter(#calendarList),
            returnValue: _FakeCalendarListResource_2(
              this,
              Invocation.getter(#calendarList),
            ),
          )
          as _i3.CalendarListResource);

  @override
  _i3.CalendarsResource get calendars =>
      (super.noSuchMethod(
            Invocation.getter(#calendars),
            returnValue: _FakeCalendarsResource_3(
              this,
              Invocation.getter(#calendars),
            ),
          )
          as _i3.CalendarsResource);

  @override
  _i3.ChannelsResource get channels =>
      (super.noSuchMethod(
            Invocation.getter(#channels),
            returnValue: _FakeChannelsResource_4(
              this,
              Invocation.getter(#channels),
            ),
          )
          as _i3.ChannelsResource);

  @override
  _i3.ColorsResource get colors =>
      (super.noSuchMethod(
            Invocation.getter(#colors),
            returnValue: _FakeColorsResource_5(
              this,
              Invocation.getter(#colors),
            ),
          )
          as _i3.ColorsResource);

  @override
  _i3.EventsResource get events =>
      (super.noSuchMethod(
            Invocation.getter(#events),
            returnValue: _FakeEventsResource_6(
              this,
              Invocation.getter(#events),
            ),
          )
          as _i3.EventsResource);

  @override
  _i3.FreebusyResource get freebusy =>
      (super.noSuchMethod(
            Invocation.getter(#freebusy),
            returnValue: _FakeFreebusyResource_7(
              this,
              Invocation.getter(#freebusy),
            ),
          )
          as _i3.FreebusyResource);

  @override
  _i3.SettingsResource get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeSettingsResource_8(
              this,
              Invocation.getter(#settings),
            ),
          )
          as _i3.SettingsResource);
}

/// A class which mocks [EventsResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsResource extends _i1.Mock implements _i3.EventsResource {
  MockEventsResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> delete(
    String? calendarId,
    String? eventId, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [calendarId, eventId],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i3.Event> get(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #get,
                  [calendarId, eventId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #maxAttendees: maxAttendees,
                    #timeZone: timeZone,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Event> import(
    _i3.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #import,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #import,
                  [request, calendarId],
                  {
                    #conferenceDataVersion: conferenceDataVersion,
                    #supportsAttachments: supportsAttachments,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Event> insert(
    _i3.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #insert,
                  [request, calendarId],
                  {
                    #conferenceDataVersion: conferenceDataVersion,
                    #maxAttendees: maxAttendees,
                    #sendNotifications: sendNotifications,
                    #sendUpdates: sendUpdates,
                    #supportsAttachments: supportsAttachments,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Events> instances(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    int? maxResults,
    String? originalStart,
    String? pageToken,
    bool? showDeleted,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #instances,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #originalStart: originalStart,
                #pageToken: pageToken,
                #showDeleted: showDeleted,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Events>.value(
              _FakeEvents_10(
                this,
                Invocation.method(
                  #instances,
                  [calendarId, eventId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #maxAttendees: maxAttendees,
                    #maxResults: maxResults,
                    #originalStart: originalStart,
                    #pageToken: pageToken,
                    #showDeleted: showDeleted,
                    #timeMax: timeMax,
                    #timeMin: timeMin,
                    #timeZone: timeZone,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Events>);

  @override
  _i7.Future<_i3.Events> list(
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #list,
              [calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Events>.value(
              _FakeEvents_10(
                this,
                Invocation.method(
                  #list,
                  [calendarId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #eventTypes: eventTypes,
                    #iCalUID: iCalUID,
                    #maxAttendees: maxAttendees,
                    #maxResults: maxResults,
                    #orderBy: orderBy,
                    #pageToken: pageToken,
                    #privateExtendedProperty: privateExtendedProperty,
                    #q: q,
                    #sharedExtendedProperty: sharedExtendedProperty,
                    #showDeleted: showDeleted,
                    #showHiddenInvitations: showHiddenInvitations,
                    #singleEvents: singleEvents,
                    #syncToken: syncToken,
                    #timeMax: timeMax,
                    #timeMin: timeMin,
                    #timeZone: timeZone,
                    #updatedMin: updatedMin,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Events>);

  @override
  _i7.Future<_i3.Event> move(
    String? calendarId,
    String? eventId,
    String? destination, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #move,
              [calendarId, eventId, destination],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #move,
                  [calendarId, eventId, destination],
                  {
                    #sendNotifications: sendNotifications,
                    #sendUpdates: sendUpdates,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Event> patch(
    _i3.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #patch,
                  [request, calendarId, eventId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #conferenceDataVersion: conferenceDataVersion,
                    #maxAttendees: maxAttendees,
                    #sendNotifications: sendNotifications,
                    #sendUpdates: sendUpdates,
                    #supportsAttachments: supportsAttachments,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Event> quickAdd(
    String? calendarId,
    String? text, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #quickAdd,
              [calendarId, text],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #quickAdd,
                  [calendarId, text],
                  {
                    #sendNotifications: sendNotifications,
                    #sendUpdates: sendUpdates,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Event> update(
    _i3.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #update,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Event>.value(
              _FakeEvent_9(
                this,
                Invocation.method(
                  #update,
                  [request, calendarId, eventId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #conferenceDataVersion: conferenceDataVersion,
                    #maxAttendees: maxAttendees,
                    #sendNotifications: sendNotifications,
                    #sendUpdates: sendUpdates,
                    #supportsAttachments: supportsAttachments,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Event>);

  @override
  _i7.Future<_i3.Channel> watch(
    _i3.Channel? request,
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #watch,
              [request, calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
            returnValue: _i7.Future<_i3.Channel>.value(
              _FakeChannel_11(
                this,
                Invocation.method(
                  #watch,
                  [request, calendarId],
                  {
                    #alwaysIncludeEmail: alwaysIncludeEmail,
                    #eventTypes: eventTypes,
                    #iCalUID: iCalUID,
                    #maxAttendees: maxAttendees,
                    #maxResults: maxResults,
                    #orderBy: orderBy,
                    #pageToken: pageToken,
                    #privateExtendedProperty: privateExtendedProperty,
                    #q: q,
                    #sharedExtendedProperty: sharedExtendedProperty,
                    #showDeleted: showDeleted,
                    #showHiddenInvitations: showHiddenInvitations,
                    #singleEvents: singleEvents,
                    #syncToken: syncToken,
                    #timeMax: timeMax,
                    #timeMin: timeMin,
                    #timeZone: timeZone,
                    #updatedMin: updatedMin,
                    #$fields: $fields,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i3.Channel>);
}

/// A class which mocks [AuthClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthClient extends _i1.Mock implements _i9.AuthClient {
  MockAuthClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AccessCredentials get credentials =>
      (super.noSuchMethod(
            Invocation.getter(#credentials),
            returnValue: _FakeAccessCredentials_12(
              this,
              Invocation.getter(#credentials),
            ),
          )
          as _i4.AccessCredentials);

  @override
  _i7.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i7.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i7.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
          )
          as _i7.Future<_i11.Uint8List>);

  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i7.Future<_i5.StreamedResponse>.value(
              _FakeStreamedResponse_14(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i7.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i5.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i7.Future<_i5.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i7.Future<_i5.Response>);

  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i7.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i7.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
          )
          as _i7.Future<_i11.Uint8List>);

  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i7.Future<_i5.StreamedResponse>.value(
              _FakeStreamedResponse_14(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i7.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
